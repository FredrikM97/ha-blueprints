blueprint:
  name: Laptop Power Control with External Displays
  description: >
    This automation turns ON the smart plug for your laptop when an external monitor is connected
    via USB-C and the laptop is active. It turns OFF the smart plug when the laptop is sleeping or
    when only the internal screen is being used (e.g., no external monitor is connected).
  domain: automation
  input:
    display_sensor:
      name: Display Count Sensor
      description: >
        Sensor that reports the number of active displays connected to the laptop. This will be used to
        detect when an external monitor is connected. For example, `sensor.laptop_name_displays`.
        Replace `laptop_name` with your laptop's entity ID.
      selector:
        entity:
          domain: sensor
    activity_sensor:
      name: Laptop Activity Sensor
      description: >
        A binary sensor that indicates if the laptop is active (e.g., "on") or sleeping. For example,
        `binary_sensor.laptop_name_active`. Replace `laptop_name` with your laptop's entity ID.
      selector:
        entity:
          domain: binary_sensor
    charging_sensor:
      name: Charging Status Sensor
      description: >
        A sensor that reports the charging status of the laptop, with the attribute `Is Charging` indicating
        if the laptop is plugged in. For example, `sensor.laptop_name_internal_battery_state`.
        Replace `laptop_name` with your laptop's entity ID.
      selector:
        entity:
          domain: sensor
    switch_device:
      name: Smart Plug
      description: >
        The switch entity that controls power to the smart plug, used to provide power to the laptop.
        Example: `switch.laptop_name_power`. Replace `laptop_name` with your laptop's entity ID.
      selector:
        entity:
          domain: switch
    displays_on_value:
      name: Number of Displays That Indicates External Monitor is Connected
      description: >
        Enter the value that indicates the laptop is using an external monitor. For example, "2" if two
        displays are connected via USB-C.
      default: "2"
      selector:
        text:

trigger:
  - platform: state
    entity_id: !input display_sensor
  - platform: state
    entity_id: !input activity_sensor
    attribute: Sleeping
  - platform: state
    entity_id: !input charging_sensor
    attribute: Is Charging
  - platform: state
    entity_id: !input display_sensor
    from: null
    to: null

condition: []

action:
  - choose:
      - conditions:
          - condition: state
            entity_id: !input display_sensor
            state: !input displays_on_value
          - condition: state
            entity_id: !input activity_sensor
            state: "on"
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input switch_device
    default:
      - service: switch.turn_off
        target:
          entity_id: !input switch_device

mode: single
